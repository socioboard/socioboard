@using Domain.Socioboard.Domain;
@using Socioboard.Helper;
@{
    Layout = null;
    string path = @System.Configuration.ConfigurationManager.AppSettings["domain"];
    bool check = true;
    System.Globalization.CultureInfo provider = System.Globalization.CultureInfo.InvariantCulture;
    string formate = "yyyy/MM/dd HH:mm:ss";
}

<ul class="chat">
    @foreach (var dicitem in (Dictionary<string, List<object>>)Model)
    {
        if (dicitem.Key == "facebook")
        {
            List<object> lstdic = (List<object>)dicitem.Value;
            foreach (var facebookmsg in lstdic)
            {
                Domain.Socioboard.MongoDomain.FacebookMessage item = (Domain.Socioboard.MongoDomain.FacebookMessage)facebookmsg;
                try
                {
                    string[] str = Socioboard.Helper.UrlExtractor.splitUrlFromString(item.Message);
                    if (check == true)
                    { 
        <li class="left clearfix">
            <span class="chat-img pull-left">
                <img src="@item.FromProfileUrl" class="img-circle profilePic" alt="User Avatar" onclick="getFacebookProfiles('@item.FromId')">
            </span>
            <div class="chat-body clearfix">
                <div>
                    <a target="_blank" href="http://www.facebook.com/@item.FromId"><strong class="primary-font">@item.FromName</strong></a><br />
                    <small class="text-muted">
                        @{
                        string messagedate = SBUtils.CompareDateWithclientlocal(ViewBag.datetime, DateTime.ParseExact(item.MessageDate,formate,provider).ToString());
                        }
                        @messagedate
                    </small>
                </div>
                <div style="margin-top: 2%;">
                    @if (str != null)
                    {
                        foreach (string substritem in str)
                        {
                            try
                            {
                                if (!string.IsNullOrEmpty(substritem))
                                {
                                    if (substritem.Contains("http"))
                                    {
                        <a target="_blank" href="@substritem ">@substritem</a>
                                    }
                                    else
                                    {
                                        string hrefPost = string.Empty;
                                        try
                                        {
                                            hrefPost = "https://www.facebook.com/" + item.FromId + "/posts/" + item.MessageId.Replace(item.FromId, string.Empty).Replace("_", string.Empty).Trim();
                                        }
                                        catch (Exception ex)
                                        {
                                            Console.WriteLine("Error : " + ex.StackTrace);
                                        }
                                        if (!string.IsNullOrEmpty(hrefPost))
                                        {
                        <a target="_blank" href="@hrefPost" style="color:#333">@substritem</a>
                                        }
                                        else
                                        {
                        @substritem;
                                        }
                                    }
                                }
                            }
                            catch (Exception ex)
                            {
                            }
                        }
                    }
                    else
                    {
                        {
                            string hrefPost = string.Empty;
                            try
                            {
                                hrefPost = "https://www.facebook.com/" + item.FromId + "/posts/" + item.MessageId.Replace(item.FromId, string.Empty).Replace("_", string.Empty).Trim();
                            }
                            catch (Exception ex)
                            {
                                Console.WriteLine("Error : " + ex.StackTrace);
                            }
                            if (!string.IsNullOrEmpty(hrefPost))
                            {
                        <a target="_blank" href="@hrefPost" style="color:#333">@item.Message</a>
                            }
                            else
                            {
                        @item.Message;
                            }
                        }
                    }
                    @*Display image of post*@
                    @if (!string.IsNullOrEmpty(item.Picture) && item.Picture != null)
                    {
                        <br />
                        <img src="@item.Picture" style="margin-top: 3%;"> </img>
                    }
                </div>
            </div>
            <br />
            <div class="input-group">
                <input type="text" id="textfb_@item.MessageId" class="form-control input-sm" placeholder="Type your comment here...">
                <span class="input-group-btn">
                    <button class="btn btn-warning btn-sm" id="okfb_@item.MessageId" onclick="commentFB('@item.MessageId','@item.ProfileId')">
                        @GlobusMultiLanguageLib.Resources.Feeds_Panel1Partial_Comment
                    </button>
                    @if (item.FbLike == "likes")
                    {
                        <button status="@item.FbLike" id="likefb_@item.MessageId" onclick="facebookLike('@item.Id','@item.ProfileId','@item.MessageId')" type="button" class="btn btn-info btn-circle">
                            <i class="fa fa-thumbs-o-up"></i>
                        </button>
                    }
                    else
                    {
                        <button status="@item.FbLike" id="likefb_@item.MessageId" onclick="facebookLike('@item.Id','@item.ProfileId','@item.MessageId')" type="button" class="btn btn-info btn-circle">
                            <i class="fa fa-thumbs-o-down"></i>
                        </button>
                    }
                </span>
            </div>
        </li>
                        //check = false;
                    }
                    else
                    {
        <li class="right clearfix">
            <span class="chat-img pull-right">
                <img src="@item.FromProfileUrl" class="img-circle profilePic" alt="User Avatar" onclick="getFacebookProfiles('@item.FromId')">
            </span>
            <div class="chat-body clearfix">
                <div>
                    <a target="_blank" href="http://www.facebook.com/@item.FromId"><strong class="pull-right primary-font">@item.FromName</strong></a>
                    <small class="text-muted">
                        @{
                        string messagedate = SBUtils.CompareDateWithclientlocal(ViewBag.datetime, DateTime.ParseExact(item.MessageDate,formate,provider).ToString());
                        }
                        <i class="fa fa-clock-o fa-fw"></i>@messagedate
                    </small>
                </div>
                <div style="margin-top: 2%;">
                    @foreach (string substritem in str)
                    {
                        try
                        {
                            if (!string.IsNullOrEmpty(substritem))
                            {
                                if (substritem.Contains("http"))
                                {
                        <a target="_blank" href="@substritem ">@substritem</a>
                                }
                                else
                                {
                                    string hrefPost = string.Empty;
                                    try
                                    {
                                        hrefPost = "https://www.facebook.com/" + item.FromId + "/posts/" + item.MessageId.Replace(item.FromId, string.Empty).Replace("_", string.Empty).Trim();
                                    }
                                    catch (Exception ex)
                                    {
                                        Console.WriteLine("Error : " + ex.StackTrace);
                                    }
                                    if (!string.IsNullOrEmpty(hrefPost))
                                    {
                        <a target="_blank" href="@hrefPost">@substritem</a>
                                    }
                                    else
                                    {
                        @substritem;
                                    }
                                }
                            }
                        }
                        catch (Exception ex)
                        {
                        }
                    }
                    @*Display image of post*@
                    @if (!string.IsNullOrEmpty(item.Picture) && item.Picture != null)
                    {
                        <br />
                        <img src="@item.Picture" style="margin-top: 3%;"> </img>
                    }
                </div>
            </div>
            <br />
            <div class="input-group">
                <input type="text" id="textfb_@item.MessageId" class="form-control input-sm" placeholder="@GlobusMultiLanguageLib.Resources.Feeds_Panel1Partial_TBtextfbPlaceholder">
                <span class="input-group-btn">
                    <button class="btn btn-warning btn-sm" id="okfb_@item.MessageId" onclick="commentFB('@item.MessageId','@item.ProfileId')">
                        @GlobusMultiLanguageLib.Resources.Feeds_Panel1Partial_Comment
                    </button>
                    @if (item.FbLike == "likes")
                    {
                        <button status="@item.FbLike" id="likefb_@item.MessageId" onclick="facebookLike('@item.Id','@item.ProfileId','@item.MessageId')" type="button" class="btn btn-info btn-circle">
                            <i class="fa fa-thumbs-o-up"></i>
                        </button>
                    }
                    else
                    {
                        <button status="@item.FbLike" id="likefb_@item.MessageId" onclick="facebookLike('@item.Id','@item.ProfileId','@item.MessageId')" type="button" class="btn btn-info btn-circle">
                            <i class="fa fa-thumbs-o-down"></i>
                        </button>
                    }

                </span>
            </div>
        </li>  
                    check = true;
                    }
                }
                catch (Exception ex)
                {
                }
            }
        }

        if (dicitem.Key == "twitter")
        {
            int i = 0;
            List<object> lstdic = (List<object>)dicitem.Value;
            foreach (var twitterfeed in lstdic)
            {
                Domain.Socioboard.MongoDomain.TwitterFeed item = (Domain.Socioboard.MongoDomain.TwitterFeed)twitterfeed;
                try
                {
                    string[] str = Socioboard.Helper.UrlExtractor.splitUrlFromString(item.Feed);
                    if (check == true)
                    { 
        <li class="left clearfix">
            <span class="chat-img pull-left">
                <img src="@item.FromProfileUrl" class="img-circle profilePic" alt="User Avatar" onclick="getFacebookProfiles('@item.FromId')">
            </span>
            <div class="chat-body clearfix">
                <div>
                    <a target="_blank" href="http://www.twitter.com/@item.FromScreenName"><strong class="primary-font">@item.FromName</strong></a>
                    <div class="btn-group pull-right open">
                        <div id="feed_action_@i.ToString()" class="menu_button" title = "Option" style="height: auto;cursor:pointer" onClick="Show_twt_menu('@item.MessageId')">
                            <i class="fa fa-bars"></i>
                        </div>
                        <div id="dropdownmenu_@item.MessageId" class="hidden_menu" style="margin-left: -11px; display: none;">
                            <ul class="dropdown-menu slidedown" style="display: block; margin-left: -140px">
                                @*<li><a onClick="RetweetPopup('@item.ScreenName','@item.ProfileId','@item.MessageId');"><i class="fa fa-retweet fa-fw"></i>@GlobusMultiLanguageLib.Resources.Feeds_Panel1Partial_Retweet</a></li>*@
                                @*<li><a onClick="FavoritePopup('@item.ScreenName','@item.ProfileId','@item.MessageId');"><i class="fa fa-star fa-fw"></i>@GlobusMultiLanguageLib.Resources.Feeds_Panel1Partial_Favourite</a></li>*@
                                <li><a onclick="QuoteMessagePopup('@item.ProfileId','@item.MessageId');" data-target="#QuoteCompose" data-toggle="modal" id="QuoteMessagePopup_@item.MessageId" status="@item.Feed"><i class="fa fa-comment fa-fw"></i>@GlobusMultiLanguageLib.Resources.Feeds_Panel1Partial_QuoteMessage</a></li>
                                <li><a onClick="MailPopUpTwt('@item.strId');" data-target="#twtmailpopup" data-toggle="modal"><i class="fa fa-envelope fa-fw"></i>@GlobusMultiLanguageLib.Resources.Feeds_Panel1Partial_EmailMessage</a></li>
                                <li><a onClick="SpamUserPopup('@item.FromScreenName','@item.ProfileId');"><i class="fa fa-ban fa-fw"></i>@GlobusMultiLanguageLib.Resources.Feeds_Panel1Partial_ReportAsSpam</a></li>
                            </ul>
                        </div>
                    </div>
                    <br />
                    <small class="text-muted">
                        @{
                        string messagedate = SBUtils.CompareDateWithclientlocal(ViewBag.datetime,DateTime.ParseExact(item.FeedDate,formate,provider).ToString());
                        }
                        @messagedate
                    </small>
                </div>
                @foreach (string substritem in str)
                {
                    try
                    {
                        if (!string.IsNullOrEmpty(substritem))
                        {
                            if (substritem.Contains("http"))
                            {
                    <div class="" @*style="text-align:justify;"*@>
                        <a target="_blank" href="@substritem ">@substritem</a>
                    </div>
                            }
                            else
                            {
                                string hrefPost = string.Empty;
                                try
                                {
                                    hrefPost = "https://www.twitter.com/" + item.FromId + "/status/" + item.MessageId.Replace(item.FromId, string.Empty).Replace("_", string.Empty).Trim();
                                }
                                catch (Exception ex)
                                {
                                    Console.WriteLine("Error : " + ex.StackTrace);
                                }
                                if (!string.IsNullOrEmpty(hrefPost))
                                {
                    <div class="" style="text-align: justify;">
                        <a target="_blank" href="@hrefPost" style="color:#333">@substritem</a>
                    </div>
                                }
                                else
                                {
                    @substritem;
                                }
                            }
                        }
                    }
                    catch (Exception ex)
                    {
                    }
                }
              
                <div>
                <a title="" data-placement="top" data-toggle="modal" data-target="#Reply" href="#" onclick="opnReply('@item.MessageId','@item.ProfileId','@item.FromScreenName')" data-original-title="Reply">
                    <i class="fa fa-share fa-fw"></i>
                </a>
                <a title="" data-placement="top" data-toggle="tooltip" href="#" data-original-title="Retweet" onClick="RetweetPopup('@item.ScreenName','@item.ProfileId','@item.MessageId')">
                    <i class="fa fa-retweet fa-fw"></i>
                </a>
                <a title="" data-placement="top" data-toggle="tooltip" href="#" data-original-title="Favorite" onClick="FavoritePopup('@item.ScreenName','@item.ProfileId','@item.MessageId')">
                    <i class="fa fa-star fa-fw"></i>
                </a>

            </div>
            </div>
            
        </li>
                        //check = false;
                    }
                    else
                    {
        <li class="right clearfix">
            <span class="chat-img pull-right">
                <img src="@item.FromProfileUrl" class="img-circle profilePic" alt="User Avatar" onclick="getFacebookProfiles('@item.FromId')">
            </span>
            <div class="chat-body clearfix">
                <div>
                    <a target="_blank" href="http://www.twitter.com/@item.FromScreenName"><strong class="pull-right primary-font">@item.FromName</strong></a>
                    <div class="btn-group open">
                        <div id="feed_action_@i.ToString()" class="menu_button" title = "Option" style="height: auto;cursor:pointer" onClick="Show_twt_menu('@item.MessageId')">
                            <i class="fa fa-cog"></i>
                        </div>
                        <div id="dropdownmenu_@item.MessageId" class="hidden_menu" style="margin-left: -11px; display: none;">
                            <ul class="dropdown-menu slidedown" style="display: block; margin-left: -12px">
                                <li><a onClick="RetweetPopup('@item.ScreenName','@item.ProfileId','@item.MessageId');"><i class="fa fa-retweet-square fa-fw"></i>@GlobusMultiLanguageLib.Resources.Feeds_Panel1Partial_Retweet</a></li>
                                <li><a onClick="FavoritePopup('@item.ScreenName','@item.ProfileId','@item.MessageId');"><i class="fa fa-favorite-square fa-fw"></i>@GlobusMultiLanguageLib.Resources.Feeds_Panel1Partial_Favourite</a></li>
                                <li><a onClick="QuoteMessagePopup('@item.ProfileId','@item.Feed.Replace("'", "")');" data-target="#QuoteCompose" data-toggle="modal"><i class="fa fa-quote-square fa-fw"></i>@GlobusMultiLanguageLib.Resources.Feeds_Panel1Partial_QuoteMessage</a></li>
                                <li><a onClick="MailPopUpTwt('@item.Id');" data-target="#twtmailpopup" data-toggle="modal"><i class="fa fa-mail-square fa-fw"></i>@GlobusMultiLanguageLib.Resources.Feeds_Panel1Partial_EmailMessage</a></li>
                                <li><a onClick="SpamUserPopup('@item.FromScreenName','@item.ProfileId');"><i class="fa fa-spam-square fa-fw"></i>@GlobusMultiLanguageLib.Resources.Feeds_Panel1Partial_ReportAsSpam</a></li>
                            </ul>
                        </div>
                    </div>
                    <small class="text-muted">
                        @{
                        string messagedate = SBUtils.CompareDateWithclientlocal(ViewBag.datetime,DateTime.ParseExact(item.FeedDate,formate,provider).ToString());
                        }
                        @messagedate<i class="fa fa-clock-o fa-fw"></i>
                    </small>



                </div>
                @foreach (string substritem in str)
                {
                    try
                    {
                        if (!string.IsNullOrEmpty(substritem))
                        {
                            if (substritem.Contains("http"))
                            {
                    <div class="pull-left" @*style="text-align:justify;"*@>
                        <a target="_blank" href="@substritem" style="text-decoration:none">@substritem</a>
                    </div>
                            }
                            else
                            {
                                string hrefPost = string.Empty;

                                try
                                {
                                    hrefPost = "https://www.twitter.com/" + item.FromId + "/status/" + item.MessageId.Replace(item.FromId, string.Empty).Replace("_", string.Empty).Trim();

                                }
                                catch (Exception ex)
                                {
                                    Console.WriteLine("Error : " + ex.StackTrace);

                                }
                                if (!string.IsNullOrEmpty(hrefPost))
                                {
                    <div class="pull-right" style="text-align: justify;">
                        <a target="_blank" href="@hrefPost" style="text-decoration:none">@substritem</a>
                    </div>
                                }
                                else
                                {
                    @substritem;

                                }
                            }


                        }
                    }
                    catch (Exception ex)
                    {
                    }

                }
            </div>

        </li>  
                check = true;
                    }
                }
                catch (Exception ex)
                {
                }
                i++;
            }
        }

        if (dicitem.Key == "linkedin")
        {
            List<object> lstdic = (List<object>)dicitem.Value;
            foreach (var linkedfeed in lstdic)
            {
                Domain.Socioboard.MongoDomain.LinkedInFeed item = (Domain.Socioboard.MongoDomain.LinkedInFeed)linkedfeed;
                try
                {
                    string[] str = Socioboard.Helper.UrlExtractor.splitUrlFromString(item.Feeds);
                    string PicUrl = string.Empty;
                    if (string.IsNullOrEmpty(item.FromPicUrl))
                    {
                        PicUrl = "../Themes/" + path + "/Contents/img/anonymousUser.jpg";
                    }
                    else
                    {
                        PicUrl = item.FromPicUrl;
                    }
                    if (check == true)
                    { 
        <li class="left clearfix">
            <span class="chat-img pull-left">
                <img src="@PicUrl" class="img-circle profilePic" alt="User Avatar" onclick="getFacebookProfiles('@item.FromId')">
            </span>
            <div class="chat-body clearfix">
                <div>
                    <a href="@item.FromUrl" target="_blank" style="text-decoration:none;cursor:pointer;"><strong class="primary-font">@item.FromName</strong></a><br />

                    <small class="text-muted">
                        @{
                        string messagedate = SBUtils.CompareDateWithclientlocal(ViewBag.datetime,DateTime.ParseExact(item.FeedsDate, formate, provider).ToString());
                        }
                        @*<i class="fa fa-clock-o fa-fw"></i>*@@messagedate
                    </small>
                    <div id="sendMailleft" class="pull-right">
                        <a class="mail_icon" onclick="mail('@item.ProfileId','@item.Id')" data-target="#mailpopup" data-toggle="modal">
                            <i class="fa fa-envelope fa-fw"></i></a>
                    </div>
                </div>
                @foreach (string substritem in str)
                {
                    try
                    {
                        if (!string.IsNullOrEmpty(substritem))
                        {
                            if (substritem.Contains("http"))
                            {
                    <div class="pull-left" @*style="text-align:justify;"*@>
                        <a target="_blank" href="@substritem ">@substritem &nbsp;</a>
                    </div>
                            }
                            else
                            {
                                string hrefPost = string.Empty;
                                if (!string.IsNullOrEmpty(hrefPost))
                                {
                    <div class="pull-left" style="text-align: justify;">
                        <a target="_blank" href="@hrefPost" style="color:#333">@substritem</a>
                    </div>
                                }
                                else
                                {
                    @substritem;
                                }
                            }
                        }
                    }
                    catch (Exception ex)
                    {
                    }
                }
                @if (!string.IsNullOrEmpty(item.ImageUrl))
                {
                    <br />
                    <img src="@item.ImageUrl" style="margin-top: 3%; height:100px;" /> 
                }
@* <div>
                    <a href="@item.FromUrl" target="_blank">@item.Feeds</a>
                </div>*@
            </div>
        </li>
                        // check = false;
                    }
                    else
                    {
        <li class="right clearfix">
            <span class="chat-img pull-right">
                <img src="@PicUrl" class="img-circle profilePic" alt="User Avatar" onclick="getFacebookProfiles('@item.FromId')">
            </span>
            <div class="chat-body clearfix">
                <div>
                    <a target="_blank" href="@item.FromUrl" style="text-decoration:none;cursor:pointer;" ><strong class="pull-right primary-font">@item.FromName</strong></a>
                    <small class="text-muted">
                        @{
                        string messagedate = SBUtils.CompareDateWithclientlocal(ViewBag.datetime, DateTime.ParseExact(item.FeedsDate,formate,provider).ToString());
                        }
                        <i class="fa fa-clock-o fa-fw"></i>@messagedate
                    </small>
                    <div id="sendMailright" onclick="mail('@item.ProfileId', '@item.Id')">
                        <span class="mail_icon" onclick="mail('@item.ProfileId','@item.Id')" data-target="#mailpopup" data-toggle="modal">
                            <img alt="" src="/Themes/@path/Contents/img/download.jpg" title="Mail"></span>
                    </div>
                </div>
                @if (!string.IsNullOrEmpty(item.ImageUrl))
                {
                    <br />
                    <img src="@item.ImageUrl" style="margin-top: 5%; height:100px;" /> 
                }
                <div>
                    <a style="text-decoration:none" href="@item.FromUrl">@item.Feeds</a>
                </div>
            </div>
        </li>  
                check = true;
                    }
                }
                catch (Exception ex)
                {
                }
            }
        }
    }

</ul>

<div class="modal fade" id="QuoteCompose" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">

    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button id="closequotepopup" data-dismiss="modal" class="close" type="button"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
                <h4 id="myModalLabel" class="modal-title">@GlobusMultiLanguageLib.Resources.Feeds_Panel1Partial_QuoteMessage</h4>
            </div>
            <div class="modal-body col-md-12">
                <div class="col-md-2">

                    <img id="quotemessageimg" src="" class="img-circle">
                    <img class="img-responsive img-circle" src="~/Themes/@System.Configuration.ConfigurationManager.AppSettings["domain"]/Contents/img/twticon.png" style="margin-left: 35px; margin-top: -20px;">
                </div>
                <div class="col-md-9">
                    <div class="input-group col-md-12">
                        <textarea rows="3" class="form-control" id="Quote_text" onkeyup="countChar()"></textarea>
                    </div>
                    <div class="form-group">
                        <br>
                        @*<div id="showRemove" class="upload_data btn btn-default btn-sm" style="background-color: rgb(34, 34, 34); border: 1px solid rgb(0, 0, 0); color: rgb(255, 255, 255); float: left; border-radius: 5px; margin-right: 6px; display: none;" onclick="ImageDelete()">
        <span style="float: right; margin-left: 5px"></span>
        <label style="float: right; font-size: small; display: block;">Remove Image x </label>
    </div>*@
                        <input type="file" accept="image/*" class="file-loading" multiple name="input4[]" id="uploadImage">
                    </div>
                </div>
                <div class="col-md-1" id="compose_count">140</div>
                <div id="binduserprofiles">
                </div>
            </div>
            <div class="modal-footer" id="leaveQuotecompose">
                <button class="btn btn-primary" type="button" id="sendMessageBtn">@GlobusMultiLanguageLib.Resources.Feeds_Panel1Partial_Post</button>
                <button data-dismiss="modal" class="btn btn-default" type="button">@GlobusMultiLanguageLib.Resources.Feeds_Panel1Partial_Close</button>
            </div>
        </div>
    </div>
</div>
<link href="~/Themes/@path/Contents/css/fileinput.min.css" rel="stylesheet" />
<script src="~/Themes/@path/Contents/js/fileinput.min.js"></script>
<script type="text/javascript">

    function mail(ProfileId, Id) {
        debugger;

        $.ajax({
            type: "GET",
            url: "../Feeds/ShowPopUp?ProfileId=" + ProfileId + "&Id=" + Id,
            data: '',
            dataType: "html",
            success: function (msg) {
                debugger;
                //  alertify.success("Hello");
                $('#mailpopup').html(msg);
                //$('#mailpopup').modal('show');
            },
            error: function (err) {
                alert(err);
                debugger;
            }
        });
    }
    $(document).ready(function () {
        $("#uploadImage").fileinput({
            showCaption: false,
            showUpload: false,
        showRemove: false
        });
    });
</script>
